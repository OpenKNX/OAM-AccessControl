
[custom]
build_flags =
  ${KNX_TP.build_flags}
  ; -D KNX_AUTO_ADAPT
  ; -D KNX_WAIT_FOR_ADDR # ensures rx of an address (GA or PA) with higher ACK probability, but takes 7ms in knx.loop()!
  ; -D OPENKNX_LOOPTIME_WARNING=13 # should be set with KNX_WAIT_FOR_ADDR to OPENKNX_LOOPTIME_WARNING + 7

[custom_develop]
extends = custom
build_flags = 
  ${custom.build_flags}
  -D OPENKNX_HEARTBEAT
  ; debug parameters
  ; -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; -D DEBUG_LOOP_TIME=10  ; will print a info when a loop took more than x ms.
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  ; "-D OPENKNX_TRACE1=Common.*"
  ; "-D OPENKNX_TRACE2=Flash.*"
debug_build_flags = -ggdb3

; this config block is for specifing options that are valid for all RP2040-based builds
[RP2040_custom]
extends = RP2040, custom
build_flags = 
  -D SERIAL_DEBUG=Serial
  -Wunused-variable

; this config block is for specifing options that are valid for all RP2040-based develop/debug builds
[RP2040_custom_develop]
extends = RP2040_develop, RP2040_custom, custom_develop
build_flags = 
  ${RP2040_develop.build_flags}
  ${RP2040_custom.build_flags}
  ${custom_develop.build_flags}
debug_build_flags = 
  ${custom_develop.debug_build_flags}
  -O0

[env:waveshare_rp2040_zero]
extends = RP2040_custom_develop, RP2040_2MB
upload_protocol = picotool
;upload_port = D:\
build_flags = 
   ${RP2040_custom_develop.build_flags}
  -D OPENKNX_DEBUG